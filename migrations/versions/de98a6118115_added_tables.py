"""added tables

Revision ID: de98a6118115
Revises: fcbc70a69a18
Create Date: 2022-10-23 23:57:33.782699

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de98a6118115'
down_revision = 'fcbc70a69a18'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
        CREATE TABLE IF NOT EXISTS OnlineShop.item (
          iditem INT NOT NULL AUTO_INCREMENT,
          name VARCHAR(45) NOT NULL,
          amount INT NOT NULL,
          price INT NOT NULL,
          photoUrls VARCHAR(45) NOT NULL,
          status VARCHAR(45) NOT NULL,
          category VARCHAR(50) NOT NULL,
          PRIMARY KEY (iditem)
        );
    """)

    op.execute("""
        CREATE TABLE IF NOT EXISTS OnlineShop.address (
          idaddress VARCHAR(45) NOT NULL,
          street VARCHAR(60) NOT NULL,
          city VARCHAR(60) NOT NULL,
          house_number INT NOT NULL,
          PRIMARY KEY (idaddress)
        );
    """)

    op.execute("""
        CREATE TABLE IF NOT EXISTS OnlineShop.user (
          iduser INT NOT NULL AUTO_INCREMENT,
          username VARCHAR(45) NOT NULL,
          firstName VARCHAR(45) NOT NULL,
          lastName VARCHAR(45) NOT NULL,
          email VARCHAR(45) NOT NULL,
          password VARCHAR(45) NOT NULL,
          phone VARCHAR(30) NOT NULL,
          address_id VARCHAR(45) NOT NULL,
          PRIMARY KEY (iduser),
          FOREIGN KEY (address_id) REFERENCES address(idaddress)
        );
    """)

    op.execute("""
        CREATE TABLE IF NOT EXISTS OnlineShop.order (
          idorder INT NOT NULL AUTO_INCREMENT,
          quantity INT NOT NULL,
          orderDate DATE NOT NULL,
          status VARCHAR(45) NOT NULL,
          payment_method VARCHAR(45) NOT NULL,
          item_id INT NOT NULL,
          user_id INT NOT NULL,
          PRIMARY KEY (idorder),
          FOREIGN KEY (item_id) REFERENCES item(iditem),
          FOREIGN KEY (user_id) REFERENCES user(iduser)
        );
    """)


def downgrade() -> None:
    op.execute("DROP table IF EXISTS OnlineShop.order;")
    op.execute("DROP table IF EXISTS OnlineShop.item;")
    op.execute("DROP table IF EXISTS OnlineShop.user;")
    op.execute("DROP table IF EXISTS OnlineShop.address;")
